from tkinter import *
import tkinter as tk
from geopy.geocoders import Nominatim
from tkinter import ttk, messagebox
from timezonefinder import TimezoneFinder
from datetime import datetime
import requests
import pytz
import pandas as pd  # Imported pandas

root = Tk()
root.title("Weather App")
root.geometry("900x500+300+200")
root.resizable(False, False)

def getWeather():
    try:
        city = textfield.get()

        geolocator = Nominatim(user_agent="geoapiExcercises")
        location = geolocator.geocode(city)
        obj = TimezoneFinder()
        result = obj.timezone_at(lng=location.longitude, lat=location.latitude)

        home = pytz.timezone(result)
        local_time = datetime.now(home)
        current_time = local_time.strftime("%I : %M  %p")
        clock.config(text=current_time)
        name.config(text="CURRENT WEATHER")

        # WEATHER API CALL
        api = "https://api.openweathermap.org/data/2.5/weather?q=" + city + "&appid=929e123e7b5954581a4141f74114d1b8"

        json_data = requests.get(api).json()

        # Using pandas to organize data
        weather_data = {
            "Condition": json_data['weather'][0]['main'],
            "Description": json_data['weather'][0]['description'],
            "Temperature (째C)": int(json_data['main']['temp'] - 273.15),
            "Pressure (hPa)": json_data['main']['pressure'],
            "Humidity (%)": json_data['main']['humidity'],
            "Wind Speed (m/s)": json_data['wind']['speed']
        }

        # Creating DataFrame
        weather_df = pd.DataFrame([weather_data])

        # Extracting data from DataFrame
        temp = weather_df['Temperature (째C)'][0]
        condition = weather_df['Condition'][0]
        description = weather_df['Description'][0]
        pressure = weather_df['Pressure (hPa)'][0]
        humidity = weather_df['Humidity (%)'][0]
        wind = weather_df['Wind Speed (m/s)'][0]

        # Updating the UI with units
        t.config(text=(temp, "째C"))
        c.config(text=(condition, "|", "FEELS LIKE", temp, "째C"))
        w.config(text=f"{wind} m/s")         # Wind in meters/second
        h.config(text=f"{humidity} %")       # Humidity in percentage
        d.config(text=description)
        p.config(text=f"{pressure} hPa")     # Pressure in hPa

    except Exception as e:
        messagebox.showerror("Weather App", "Invalid Entry")


# search box
Search_box = PhotoImage(file=r"C:\Users\Admin\PycharmProjects\weather app\Copy of search.png")
myimage = Label(image=Search_box)
myimage.place(x=20, y=20)

textfield = tk.Entry(root, justify="center", width=17, font=("poppins", 25, "bold"), bg="#404040", border=0, fg="white")
textfield.place(x=50, y=40)
textfield.focus()

Search_icon = PhotoImage(file=r"C:\Users\Admin\PycharmProjects\weather app\Copy of search_icon.png")
myimage_icon = Button(image=Search_icon, borderwidth=0, cursor="hand2", bg="#404040", command=getWeather)
myimage_icon.place(x=400, y=34)

# LOGO
Logo_image = PhotoImage(file=r"C:\Users\Admin\PycharmProjects\weather app\Copy of logo.png")
logo = Label(image=Logo_image)
logo.place(x=150, y=100)

# Bottom Box
Frame_image = PhotoImage(file=r"C:\Users\Admin\PycharmProjects\weather app\Copy of box.png")
frame_myimage = Label(image=Frame_image)
frame_myimage.pack(padx=5, pady=5, side=BOTTOM)

# time
name = Label(root, font=("arial", 15, "bold"))
name.place(x=30, y=100)
clock = Label(root, font=("Helvetica", 20))
clock.place(x=30, y=130)

# LABEL
label1 = Label(root, text="WIND", font=("Helvetica", 15, 'bold'), fg="white", bg="#1ab5ef")
label1.place(x=120, y=400)

label2 = Label(root, text="HUMIDITY", font=("Helvetica", 15, 'bold'), fg="white", bg="#1ab5ef")
label2.place(x=250, y=400)

label3 = Label(root, text="DESCRIPTION", font=("Helvetica", 15, 'bold'), fg="white", bg="#1ab5ef")
label3.place(x=430, y=400)

label4 = Label(root, text="PRESSURE", font=("Helvetica", 15, 'bold'), fg="white", bg="#1ab5ef")
label4.place(x=650, y=400)

t = Label(font=("arial", 70, "bold"), fg="#ee666d")
t.place(x=400, y=150)

c = Label(font=("arial", 15, "bold"))
c.place(x=400, y=250)

w = Label(text="...", font=("arial", 20, "bold"), bg="#1ab5ef")
w.place(x=120, y=430)

h = Label(text="...", font=("arial", 20, "bold"), bg="#1ab5ef")
h.place(x=280, y=430)

d = Label(text="...", font=("arial", 20, "bold"), bg="#1ab5ef")
d.place(x=450, y=430)

p = Label(text="...", font=("arial", 20, "bold"), bg="#1ab5ef")
p.place(x=670, y=430)

root.mainloop()
